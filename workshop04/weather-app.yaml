---
kind: Namespace
apiVersion: v1
metadata:
  name: weatherns
  labels:
    name: weather-app

---
kind: Secret
apiVersion: v1

metadata:
  name: weather-secret
  namespace: weatherns
  labels:
    app: weather-app

data:
  app_id: Yjk4NTcwMmJmMzgzMzk3ZmZiYTM3Y2Q5NmEyZjNkM2U=

---
kind: Deployment
apiVersion: apps/v1

metadata:
  name: weather-deploy
  namespace: weatherns
  labels:
    app: weather-app
    version: v1

spec:
  replicas: 2
  selector:
    matchLabels:
      name: weather-pod
  template:
    metadata:
      name: weather-pod
      namespace: weatherns
      labels:
        app: weather-app
        name: weather-pod
        version: v1
    spec:
      containers:
      - name: weather
        image: stackupiss/weather:v1
        imagePullPolicy: Always
        env:

        - name: APP_ID
          valueFrom:
            secretKeyRef:
              name: weather-secret
              key: app_id

#        - name: APP_DEFAULT_CITY
#          valueFrom:
#            configMapKeyRef:
#              name: myapp-weather-config
#              key: app_default_city

        ports:
        - name: weather-port
          containerPort: 3000

#        readinessProbe:
#          httpGet:
#            path: /ready
#            port: weather-port
#          periodSeconds: 60

#        livenessProbe:
#          httpGet:
#            path: /health
#            port: weather-port
#          periodSeconds: 60  

#        resources:
#          requests:
#            cpu: 100m
#            memory: 32M
#          limits:
#            memory: 128M

 #           cpu: 150m
 #           memory: 32m

  strategy:
    type: RollingUpdate #DEFAULT
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  
---
kind: Service
apiVersion: v1

metadata:
  name: weather-svc
  namespace: weatherns
  labels:
    app: weather-app

spec:
  type: ClusterIP
  selector:
    name: weather-pod
#    app: weather-app
  ports:
  - name: weather-svc-port
    port: 3000
    targetPort: weather-port

---
kind: Ingress
apiVersion: networking.k8s.io/v1beta1

metadata:
  name: weather-ing
  namespace: weatherns
  labels:
    app: weather-app

#  annotations:
#  # SPECIFIC TO LOAD BALANCER (NGINX, KONG, etc.)
#    nginx.ingress.kubernetes.io/rewrite-target: /$2
#    nginx.ingress.kubernetes.io/ssl-redirect: "false"

spec:
  rules:
#  - host: weather.omim.whatever   #need a domain name to do this. Or simulate one
  - http:
    paths:
    - path: /
      backend:
        serviceName: weather-svc
        servicePort: 3000 #weather-svc-port